*checksyntax.txt*   checksyntax -- Check files for syntax errors (r, javascript, php, ruby, tex ...)
                    Author: Tom Link, micathom at gmail com

The checksyntax plugin runs an external syntax checker for the current buffer 
whenever the buffer is saved (by calling the |:CheckSyntax| command). Syntax 
errors are managed as location or quickfix lists. If any syntax error occurs, 
the |location-list| is opened (users can redefine |CheckSyntaxFail()| to change 
this behaviour). You can use any |location-list| related command to navigate 
the list of syntax errors.


Invocation~

Manual invocation:
By default, |:CheckSyntax| is mapped to <F5> (if not mapped already), and 
automatically executed when saving the buffer. If multiple syntax checkers are 
defined for the given filetype, this will by default invoke the preferred (see 
|g:checksyntax#preferred|) or first good (i.e. installed) syntax checker for a 
given filetype.

:CheckSyntax! (with the optional <bang>) or <C-F5> will run all supported 
syntax checkers for a given filetype if multiple syntax checkers are defined 
for a given filetype and if the software is installed on your computer.

Automatic invocation:
In order to automatically run a syntax check when saving a file, please set 
|g:checksyntax#auto_enable_rx| to an appropriate value. If the variable is set 
to '.', which matches all filetypes, automatic syntax checks are enabled for 
all supported filetypes. Automatic checks are equivalent to running 
|:CheckSyntax| with no <bang>.


Supported filetypes~

The syntax checks are performed by external syntax checker. This software has 
to be installed on your computer. Pre-defined syntax checkers are:

  bash         ... Use shellcheck, bash -n
  c, cpp       ... Use splint
  haskell      ... hlint, ghc-mod-check
  html         ... Use tidy
  java         ... Use
                    jlint (http://jlint.sourceforge.net),
                    checkstyle (http://checkstyle.sourceforge.net),
                    pmd (http://pmd.sourceforge.net)
  javascript   ... Use jshint, esprima, gjslint, jslint, jsl, pmd
  lua          ... Use luac (run luac -p)
  perl         ... Use perl (run perl -Wc)
  php          ... Use php (run php -l)
  python       ... Use pyflakes or pylint
  r            ... Use codetools::checkUsage, lint::lint, or 
                   svTools::lint
  ruby         ... Use ruby (run ruby -c)
  tex, latex   ... Use chktex (run chktex -q -v0)
  typescript   ... Use tsc
  viki         ... Use deplate
  xhtml        ... Use tidy
  xml, docbk   ... Use xmllint, pmd

Syntax checker definitions are kept in:
autoload/checksyntax/defs/{&filetype}.vim

Run this command to find out, which filetypes are supported: >

  :echo globpath(&rtp, 'autoload/checksyntax/defs/*.vim')


Credits:

This plugin was originally based on Klaus Horsten's php_console 
(vimscript #779) and it is the successor of php_check_syntax.vim 
(vimscript #1272).


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %%

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed or update your runtime.

Also available via git: http://github.com/tomtom/checksyntax_vim/


Optional enhancements~

If quickfixsigns (vimscript #2584) is installed, lines containing syntax errors 
will be marked with signs.

Experimental: If AsyncCommand (vimscript #3431) is installed, syntax checks can 
be peformed asynchronously -- see also |g:checksyntax#run_alternatives|, 
|g:checksyntax#run_all_alternatives| and |g:checksyntax#async_runner|. This 
requires a version of vim with |clientserver| support and |v:servername| to be 
set (for vim see also |--servername|).


%s
